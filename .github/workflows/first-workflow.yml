name: CI to Docker Hub v2

#describe what will effect workflow trigger
on:
  #@time(push) to Github Repository, main branch
  push:
    #push if the commit is a production version version 
    #tags:
    #  - "v*.*.*"
    branches: [ master ]

#describe the set of jobs to be performed in the workflow
jobs:
  #Job 1
  build:
    #which image should be used to generate the container in which "build" job will run?
    runs-on: ubuntu-latest
    steps:
      # delta_ new step (step 0//5): add builder and build cache snippets
      # this will reduce the build time by caching images (download once, use N)
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      #step 1//5: check out repository under $GITHUB_WORKSPACE
      - name: Check out Repo
        uses: actions/checkout@v2
      #step 2//5: use PAT + username to login
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME     }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      #step 3//5: use BuildKit under the hood via a Buildx action. This requries add'l setup
      - name: Set up Docker Buildx
        id:   buildx
        uses: docker/setup-buildx-action@v1
      #step 4//5
      - name: Build and push
        id:   docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          #delta_ incorporate a build cache
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/simplewhale:latest
          #delta_ use the cache from step 0//5 as a store and retrieval point
          cache-from: type=local,src=/tmp/.buildx-cache
          #delta_ use the cache from step 0//5 as a store and retrieval point
          cache-to: type=local,dest=/tmp/.buildx-cache
      #step 5//5
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

